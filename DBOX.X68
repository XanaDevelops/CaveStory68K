*-----------------------------------------------------------
* Title      :
* Written by :
* Date       :
* Description:
*-----------------------------------------------------------

START_DBOX:
    ; 4(SP).W ID
    MOVE.W  4(SP), (CURRENTTXTID) 

    ANDI.B  #%00011111, (GAMEFLAGS)
    BSET.B  #7, (GAMEFLAGS)
    CLR.W   (HASPORTTR)
    CLR.W   (TXTINDEX)
    CLR.W   (TXTINDEXOFF)
    CLR.W   (DIAGINDEX)
    CLR.W   (MORELINES)
    CLR.W   (CDBSINGLE)

    BSR SET_SCROLL_TEXT

    RTS
UPDATE_DBOX:
    ;COMPRUEBA SI EXISTE UN DIALOGO ACTIVO
    CMP.W   #-1, (CURRENTTXTID)
    BEQ     .NONLINE
    ;COMPRUEBA FLAG DBOX END
    BTST.B  #6, (GAMEFLAGS)
    BEQ     .NOEND
    ;ESPERA Z
    BTST.B  #KEYM_Z, (KEY_PRESS_PLAYER)
    BEQ     .NONLINE
    ;ESTABLECE FLAGS
    
    MOVE.W  #-1, (CURRENTTXTID)
    BCLR.B  #7, (GAMEFLAGS)
    BCLR.B  #KEYM_Z, (KEY_PRESS_PLAYER)  ;BUG SALTO SALIR DBOX
    BCLR.B  #KEYM_Z, (KEY_HOLD_PLAYER)
    RTS                 ;A VER QUE TAL RTS AHÍ, POR SI LUEGO MUEVO REGISTROS
    .NOEND:
    ;AVANCE RAPIDO
    BTST.B  #KEYM_X, (KEY_HOLD_PLAYER)
    BNE     .SITIM
    SUBQ.W  #1, (TXTDELAYV)
    BPL     .NOTIM
    .SITIM:
        MOVE.W  #TXTDELAY, (TXTDELAYV)
        ADDQ.W  #1, (TXTINDEX)
    .NOTIM:
    ;COMPRUEBA FLAG LINEA
    BTST.B  #5, (GAMEFLAGS)
    BNE     .SILINE
    ;PREVIENE LINEAS MUY LARGAS
    CMP.W   #38, (TXTINDEX)
    BLT     .NONLINE
    .SILINE:
    ;AVANZA LINEA
    CLR.W   (TXTINDEX)
    CLR.W   (TXTINDEXOFF)
    BCLR.B  #5, (GAMEFLAGS)
    ;COMPRUEBA SI SCROLL
    CMP.W   #MAXLINES-1, (MORELINES)
    BLT     .NOSCR
    ;INCIO DE LINEA
    ADDQ.W  #1, (DIAGINDEX)
    BRA     .NONLINE
    .NOSCR:
    ;NUMERO DE LINEAS A DIBUJAR
    ADDQ.W  #1, (MORELINES)
    .NONLINE:
    RTS

DRAW_DBOX:
    MOVEM.L D0-D4, -(SP)

    CMP.W   #-1, (CURRENTTXTID)
    BEQ     .END_DBOX

    MOVE.B  #80, D0
    MOVE.L  #WHITE, D1
    TRAP    #15
    ADDQ.B  #1, D0
    MOVE.L  #BLACK, D1
    TRAP    #15

    ADDQ.B  #6, D0           ;Recuadro
    MOVE.W  #.DBOXX1, D1
    MOVE.W  #.DBOXY1, D2
    MOVE.W  #.DBOXX2, D3
    MOVE.W  #.DBOXY2, D4
    TRAP    #15

    MOVE.W  #DBOXTS, D3

    MOVE.B  #81, D0
    MOVE.L  #BLACK, D1
    TRAP    #15

    CLR.L   D1                    ;CARGA FRASES DIALOGO
    MOVE.W  (CURRENTTXTID), D1
    LSL.W   #2, D1

    LEA     ALLDIALOGS, A6
    MOVE.L  (A6, D1), A6

    MOVE.W  (MORELINES), D4

    MOVE.W  (DIAGINDEX), D2  ;FRASE
    LSL.W   #2, D2

    .LOOPDBOX:
    MOVE.B  #11, D0          ;POS PROVISIONAL
    MOVE.W  D3, D1 ;081B
    TRAP    #15

    ;SELECCIONA FRASE
    MOVE.L  (A6, D2.W), A1
    ADDA.W  (TXTINDEXOFF), A1    ;DESPLAZAMIENTO POR DCCODES
    ;COMPRUEBA FINAL
    CMP.L   #-1, A1
    BNE     .NOEND
    ;MARCA FLAG FINAL
    BSET.B  #6, (GAMEFLAGS)
    BRA     .END_DBOX
    .NOEND:
    CMP.W   #0, D4    
    BEQ     .LASTLINEA
    ;IMPRIME TODA LA LINEA, AVANZA SIGUIENTE
    MOVE.W  #255, D1
    ADDQ.W  #4, D2
    BRA     .PAINTLINEA 
    .LASTLINEA: 
    ;COMPRUEBA DBCODES
    MOVE.W  (TXTINDEX), D1
    SUB.W   (TXTINDEXOFF), D1 ;CORRIGE AVANCE A1
    CLR.L   D0
    CMP.B   #CDBCCOL, (A1, D1)
    BGT     .NOCODE
    ;EJECUTA CODIGO
    MOVE.B  (A1, D1), D0
    MOVE.W  D0, -(SP)
    BSR     DBCODES
    ADDQ.L #2, SP
    .NOCODE:
    ;COMPRUEBA \0
    CMP.B   #0, (A1, D1)
    BNE     .PAINTLINEA
    ;MARCA SIGUIENTE LINEA
    BSET.B  #5, (GAMEFLAGS)
    .PAINTLINEA:       
    MOVE.B  #1, D0
    
    TRAP    #15
    
    ADDQ.W  #1, D3
    SUBQ.W  #1, D4
    BGE     .LOOPDBOX
    .END_DBOX:

    MOVEM.L (SP)+, D4-D0
    RTS

.DBOXX1          EQU 20
.DBOXX2          EQU SCREEN_WIDTH-20
.DBOXY1          EQU (SCREEN_HEIGHT/2)+80
.DBOXY2          EQU SCREEN_HEIGHT-20

DBCODES:
    ;EJECUTA LOS DIFERENTES DB CODES
    ; (SP) ID DB CODE >=$A0
    ; MODIFICA A1, D1, TXTINDEX, TXTINDEXOFF
    
    MOVEM.L D0/D2/D7, -(SP)

    ;PINTA LA LINEA ACTUAL HASTA AHORA
    MOVE.B #1, D0
    TRAP #15

    ;OBTIENE ID
    MOVE.W  16(SP), D0
    ;EVITAR LEER 2 VECES CODE
    ADDQ.W #1, D1           
    ADDQ.L #1, A1
    ADDQ.W #1, (TXTINDEXOFF)

    ;COMPRUEBA CDBCCOL
    CMP.W   #CDBCCOL, D0
    BNE     .NOCCOL
    ;LEE COLOR EN D2, CAMBIA COLOR
    BSR     .READLD2
    MOVE.L  D2, -(SP)
    BSR     SET_COLOR_TEXT
    ADDQ.L  #4, SP
    BRA     .END
    .NOCCOL:
    ;COMPRUEBA COLORES PREFIJADOS
    CMP.W   #CDBDIAG, D0
    BGE     .NOPCOL

    .NOPCOL:
    ;COMPRUEBA CDBDIAG
    BNE     .NODIAG

    .NODIAG:

    .END:
    MOVE.W D1, (TXTINDEX)
    MOVEM.L (SP)+, D7/D2/D0
    RTS

    ;LEER BYTE A BYTE POR PARIDAD
    .READWD2:
        MOVE.W #1, D7
        ADDQ.W #2, D1
        ADDQ.W #2, (TXTINDEXOFF)
        BRA .READD2
    .READLD2:
        MOVE.W #3, D7
        ADDQ.W #4, D1
        ADDQ.W #4, (TXTINDEXOFF)
    .READD2:
        CLR.L   D2
        .READLP:
        ASL.L #8, D2
        MOVE.B (A1)+, D2
        DBRA    D7, .READLP
        RTS

    .CDBCOLORS:  DC.L RED, BLACK, WHITE

CURRENTTXTID    DS.W 1
HASPORTTR       DS.W 1
TXTINDEX        DS.W 1
TXTINDEXOFF     DS.W 1
DIAGINDEX       DS.W 1
CDBSINGLE       DS.W 1
MORELINES       DS.W 1
TXTDELAYV       DS.W 1

TXTDELAY        EQU 1





*~Font name~Courier New~
*~Font size~10~
*~Tab type~1~
*~Tab size~4~
